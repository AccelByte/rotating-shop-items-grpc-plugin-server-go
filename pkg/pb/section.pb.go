// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: section.proto

package section_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRotationItemsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string         `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Namespace     string         `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	SectionObject *SectionObject `protobuf:"bytes,3,opt,name=sectionObject,proto3" json:"sectionObject,omitempty"` // section short info
}

func (x *GetRotationItemsRequest) Reset() {
	*x = GetRotationItemsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRotationItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRotationItemsRequest) ProtoMessage() {}

func (x *GetRotationItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRotationItemsRequest.ProtoReflect.Descriptor instead.
func (*GetRotationItemsRequest) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{0}
}

func (x *GetRotationItemsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRotationItemsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetRotationItemsRequest) GetSectionObject() *SectionObject {
	if x != nil {
		return x.SectionObject
	}
	return nil
}

type SectionObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionName string               `protobuf:"bytes,1,opt,name=sectionName,proto3" json:"sectionName,omitempty"` // Section name
	SectionId   string               `protobuf:"bytes,2,opt,name=sectionId,proto3" json:"sectionId,omitempty"`     // Section id
	StartDate   int64                `protobuf:"varint,3,opt,name=startDate,proto3" json:"startDate,omitempty"`    // Start Date
	EndDate     int64                `protobuf:"varint,4,opt,name=endDate,proto3" json:"endDate,omitempty"`        // End Date
	Items       []*SectionItemObject `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`             // Items which config in section
}

func (x *SectionObject) Reset() {
	*x = SectionObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionObject) ProtoMessage() {}

func (x *SectionObject) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionObject.ProtoReflect.Descriptor instead.
func (*SectionObject) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{1}
}

func (x *SectionObject) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

func (x *SectionObject) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *SectionObject) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *SectionObject) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *SectionObject) GetItems() []*SectionItemObject {
	if x != nil {
		return x.Items
	}
	return nil
}

type SectionItemObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	ItemSku string `protobuf:"bytes,2,opt,name=itemSku,proto3" json:"itemSku,omitempty"`
}

func (x *SectionItemObject) Reset() {
	*x = SectionItemObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionItemObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionItemObject) ProtoMessage() {}

func (x *SectionItemObject) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionItemObject.ProtoReflect.Descriptor instead.
func (*SectionItemObject) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{2}
}

func (x *SectionItemObject) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *SectionItemObject) GetItemSku() string {
	if x != nil {
		return x.ItemSku
	}
	return ""
}

type GetRotationItemsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*SectionItemObject `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`          // list of items in current rotation.
	ExpiredAt int64                `protobuf:"varint,2,opt,name=expiredAt,proto3" json:"expiredAt,omitempty"` // expired time of items in current rotation
}

func (x *GetRotationItemsResponse) Reset() {
	*x = GetRotationItemsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRotationItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRotationItemsResponse) ProtoMessage() {}

func (x *GetRotationItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRotationItemsResponse.ProtoReflect.Descriptor instead.
func (*GetRotationItemsResponse) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{3}
}

func (x *GetRotationItemsResponse) GetItems() []*SectionItemObject {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetRotationItemsResponse) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

type BackfillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string                `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Namespace   string                `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Items       []*RotationItemObject `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`             // list of items in current section rotation
	SectionName string                `protobuf:"bytes,4,opt,name=sectionName,proto3" json:"sectionName,omitempty"` // section name
	SectionId   string                `protobuf:"bytes,5,opt,name=sectionId,proto3" json:"sectionId,omitempty"`     // section id
}

func (x *BackfillRequest) Reset() {
	*x = BackfillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfillRequest) ProtoMessage() {}

func (x *BackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfillRequest.ProtoReflect.Descriptor instead.
func (*BackfillRequest) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{4}
}

func (x *BackfillRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BackfillRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BackfillRequest) GetItems() []*RotationItemObject {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BackfillRequest) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

func (x *BackfillRequest) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

type BackfillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackfilledItems []*BackfilledItemObject `protobuf:"bytes,1,rep,name=backfilledItems,proto3" json:"backfilledItems,omitempty"` // only need to return backfilled items.
}

func (x *BackfillResponse) Reset() {
	*x = BackfillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackfillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfillResponse) ProtoMessage() {}

func (x *BackfillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfillResponse.ProtoReflect.Descriptor instead.
func (*BackfillResponse) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{5}
}

func (x *BackfillResponse) GetBackfilledItems() []*BackfilledItemObject {
	if x != nil {
		return x.BackfilledItems
	}
	return nil
}

type BackfilledItemObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`   // will ignore item sku if fulfill item id
	ItemSku string `protobuf:"bytes,2,opt,name=itemSku,proto3" json:"itemSku,omitempty"` // will use item sku to find item if item id is empty,
	Index   int32  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`    // required, item index which you want to backfill
}

func (x *BackfilledItemObject) Reset() {
	*x = BackfilledItemObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackfilledItemObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfilledItemObject) ProtoMessage() {}

func (x *BackfilledItemObject) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfilledItemObject.ProtoReflect.Descriptor instead.
func (*BackfilledItemObject) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{6}
}

func (x *BackfilledItemObject) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *BackfilledItemObject) GetItemSku() string {
	if x != nil {
		return x.ItemSku
	}
	return ""
}

func (x *BackfilledItemObject) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type RotationItemObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId  string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`   // item id
	ItemSku string `protobuf:"bytes,2,opt,name=itemSku,proto3" json:"itemSku,omitempty"` // item sku
	Owned   bool   `protobuf:"varint,3,opt,name=owned,proto3" json:"owned,omitempty"`    // whether the user already owned
	Index   int32  `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`    // item index
}

func (x *RotationItemObject) Reset() {
	*x = RotationItemObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_section_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RotationItemObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotationItemObject) ProtoMessage() {}

func (x *RotationItemObject) ProtoReflect() protoreflect.Message {
	mi := &file_section_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotationItemObject.ProtoReflect.Descriptor instead.
func (*RotationItemObject) Descriptor() ([]byte, []int) {
	return file_section_proto_rawDescGZIP(), []int{7}
}

func (x *RotationItemObject) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *RotationItemObject) GetItemSku() string {
	if x != nil {
		return x.ItemSku
	}
	return ""
}

func (x *RotationItemObject) GetOwned() bool {
	if x != nil {
		return x.Owned
	}
	return false
}

func (x *RotationItemObject) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

var File_section_proto protoreflect.FileDescriptor

var file_section_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x25, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x45,
	0x0a, 0x11, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x53, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x53, 0x6b, 0x75, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x63, 0x63, 0x65,
	0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x10, 0x42,
	0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x65, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5e, 0x0a, 0x14, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6b,
	0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6b, 0x75,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x72, 0x0a, 0x12, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6b, 0x75, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6b, 0x75, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x32, 0x9c, 0x02, 0x0a, 0x07, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3e, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x08,
	0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c,
	0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x8e, 0x01, 0x0a, 0x29, 0x6e, 0x65,
	0x74, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79,
	0x74, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x31, 0xaa, 0x02, 0x25, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x62, 0x79, 0x74, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_section_proto_rawDescOnce sync.Once
	file_section_proto_rawDescData = file_section_proto_rawDesc
)

func file_section_proto_rawDescGZIP() []byte {
	file_section_proto_rawDescOnce.Do(func() {
		file_section_proto_rawDescData = protoimpl.X.CompressGZIP(file_section_proto_rawDescData)
	})
	return file_section_proto_rawDescData
}

var file_section_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_section_proto_goTypes = []interface{}{
	(*GetRotationItemsRequest)(nil),  // 0: accelbyte.platform.catalog.section.v1.GetRotationItemsRequest
	(*SectionObject)(nil),            // 1: accelbyte.platform.catalog.section.v1.SectionObject
	(*SectionItemObject)(nil),        // 2: accelbyte.platform.catalog.section.v1.SectionItemObject
	(*GetRotationItemsResponse)(nil), // 3: accelbyte.platform.catalog.section.v1.GetRotationItemsResponse
	(*BackfillRequest)(nil),          // 4: accelbyte.platform.catalog.section.v1.BackfillRequest
	(*BackfillResponse)(nil),         // 5: accelbyte.platform.catalog.section.v1.BackfillResponse
	(*BackfilledItemObject)(nil),     // 6: accelbyte.platform.catalog.section.v1.BackfilledItemObject
	(*RotationItemObject)(nil),       // 7: accelbyte.platform.catalog.section.v1.RotationItemObject
}
var file_section_proto_depIdxs = []int32{
	1, // 0: accelbyte.platform.catalog.section.v1.GetRotationItemsRequest.sectionObject:type_name -> accelbyte.platform.catalog.section.v1.SectionObject
	2, // 1: accelbyte.platform.catalog.section.v1.SectionObject.items:type_name -> accelbyte.platform.catalog.section.v1.SectionItemObject
	2, // 2: accelbyte.platform.catalog.section.v1.GetRotationItemsResponse.items:type_name -> accelbyte.platform.catalog.section.v1.SectionItemObject
	7, // 3: accelbyte.platform.catalog.section.v1.BackfillRequest.items:type_name -> accelbyte.platform.catalog.section.v1.RotationItemObject
	6, // 4: accelbyte.platform.catalog.section.v1.BackfillResponse.backfilledItems:type_name -> accelbyte.platform.catalog.section.v1.BackfilledItemObject
	0, // 5: accelbyte.platform.catalog.section.v1.Section.GetRotationItems:input_type -> accelbyte.platform.catalog.section.v1.GetRotationItemsRequest
	4, // 6: accelbyte.platform.catalog.section.v1.Section.Backfill:input_type -> accelbyte.platform.catalog.section.v1.BackfillRequest
	3, // 7: accelbyte.platform.catalog.section.v1.Section.GetRotationItems:output_type -> accelbyte.platform.catalog.section.v1.GetRotationItemsResponse
	5, // 8: accelbyte.platform.catalog.section.v1.Section.Backfill:output_type -> accelbyte.platform.catalog.section.v1.BackfillResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_section_proto_init() }
func file_section_proto_init() {
	if File_section_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_section_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRotationItemsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_section_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_section_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionItemObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_section_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRotationItemsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_section_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackfillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_section_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackfillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_section_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackfilledItemObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_section_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RotationItemObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_section_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_section_proto_goTypes,
		DependencyIndexes: file_section_proto_depIdxs,
		MessageInfos:      file_section_proto_msgTypes,
	}.Build()
	File_section_proto = out.File
	file_section_proto_rawDesc = nil
	file_section_proto_goTypes = nil
	file_section_proto_depIdxs = nil
}
