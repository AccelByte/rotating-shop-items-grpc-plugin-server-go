// Code generated by go-swagger; DO NOT EDIT.

package service_plugin_config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"accelbyte.net/rotating-shop-items-cli/pkg/client/platformservice/openapi2/models"
)

// NewUpdateSectionPluginConfigParams creates a new UpdateSectionPluginConfigParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateSectionPluginConfigParams() *UpdateSectionPluginConfigParams {
	return &UpdateSectionPluginConfigParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSectionPluginConfigParamsWithTimeout creates a new UpdateSectionPluginConfigParams object
// with the ability to set a timeout on a request.
func NewUpdateSectionPluginConfigParamsWithTimeout(timeout time.Duration) *UpdateSectionPluginConfigParams {
	return &UpdateSectionPluginConfigParams{
		timeout: timeout,
	}
}

// NewUpdateSectionPluginConfigParamsWithContext creates a new UpdateSectionPluginConfigParams object
// with the ability to set a context for a request.
func NewUpdateSectionPluginConfigParamsWithContext(ctx context.Context) *UpdateSectionPluginConfigParams {
	return &UpdateSectionPluginConfigParams{
		Context: ctx,
	}
}

// NewUpdateSectionPluginConfigParamsWithHTTPClient creates a new UpdateSectionPluginConfigParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateSectionPluginConfigParamsWithHTTPClient(client *http.Client) *UpdateSectionPluginConfigParams {
	return &UpdateSectionPluginConfigParams{
		HTTPClient: client,
	}
}

/*
UpdateSectionPluginConfigParams contains all the parameters to send to the API endpoint

	for the update section plugin config operation.

	Typically these are written to a http.Request.
*/
type UpdateSectionPluginConfigParams struct {

	// Body.
	Body *models.SectionPluginConfigUpdate

	// Namespace.
	Namespace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update section plugin config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSectionPluginConfigParams) WithDefaults() *UpdateSectionPluginConfigParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update section plugin config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateSectionPluginConfigParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) WithTimeout(timeout time.Duration) *UpdateSectionPluginConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) WithContext(ctx context.Context) *UpdateSectionPluginConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) WithHTTPClient(client *http.Client) *UpdateSectionPluginConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) WithBody(body *models.SectionPluginConfigUpdate) *UpdateSectionPluginConfigParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) SetBody(body *models.SectionPluginConfigUpdate) {
	o.Body = body
}

// WithNamespace adds the namespace to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) WithNamespace(namespace string) *UpdateSectionPluginConfigParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the update section plugin config params
func (o *UpdateSectionPluginConfigParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSectionPluginConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param namespace
	if err := r.SetPathParam("namespace", o.Namespace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
